name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        preset: [gcc-debug, clang-debug, gcc-asan]
        warnings_as_errors: [WARNINGS_AS_ERRORS=OFF, WARNINGS_AS_ERRORS=ON]

        exclude:
          - preset: gcc-asan
            warnings_as_errors: WARNINGS_AS_ERRORS=OFF

    steps:
    - uses: actions/checkout@v4

    - uses: cachix/install-nix-action@v27
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install packages
      # nix caches packages, so this will do the installs.
      run: nix develop

    - name: Make ccache bin visible
      # `ccache-action` can't see the nixpkgs ccache.
      # Break nix's nice packaging to prevent duplicate installation.
      run: dirname $(nix develop --command which ccache) >> "$GITHUB_PATH"
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ci-${{ matrix.preset }}

    - name: Configure
      run: nix develop --command
            cmake -S. --preset ${{ matrix.preset }}
            -DNOCTERN_${{ matrix.warnings_as_errors }}

    - name: Build
      run: nix develop --command cmake --build --preset ${{ matrix.preset }}

    - name: Run Tests
      run: nix develop --command ctest --presets ${{ matrix.preset }} --output-on-failure
            
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results: ${{ matrix.preset }}
        path: ${{ runner.workspace }}/build/${{ matrix.preset }}/test-results.xml
        reporter: java-junit
